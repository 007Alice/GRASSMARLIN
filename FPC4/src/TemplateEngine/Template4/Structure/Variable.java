/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TemplateEngine.Template4.Structure;

/**
 *
 * @author BESTDOG
 *
 * Represents a named java variable with an optional 'final' modifier.
 */
public class Variable {
    
    public Class clazz;
    public String name;
    boolean isFinal;

    public Variable(Class clazz, String name) {
        this.clazz = clazz;
        this.name = name;
        this.isFinal = false;
    }

    /**
     * @return True if this Variables declaring class is primitive, else false and complex.
     */
    public boolean isPrimitive() {
        return this.clazz.isPrimitive();
    }

    /**
     * @return True if this Variables class is the String class.
     */
    public boolean isString() {
        return String.class.equals(this.clazz);
    }

    /**
     * Determines if the code generated by this Variable will include a 'final' modifier.
     * @param isFinal True and final, else false and mutable.
     * @return This reference is returned so that methods may be chained.
     */
    public Variable setFinal(boolean isFinal) {
        this.isFinal = isFinal;
        return this;
    }

    /**
     * Return the name of this variable.
     * @return Name of this variable.
     */
    public String getName() {
        return name;
    }

    @Override
    public String toString() {
        String accessor = this.isFinal ? "final " : "";
        return String.format("%s%s %s", accessor, clazz.getSimpleName(), name);
    }

}
